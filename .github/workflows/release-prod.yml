name: Release Prod

on:
  release:
    types: [published]

env:
  NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
  RELEASE_SLACK_WEB_HOOK_URL: ${{secrets.RELEASE_SLACK_WEB_HOOK_URL}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID_PROD}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY_PROD}}
  AWS_REGION: ${{secrets.AWS_REGION}}
  CI: true
  IS_RELEASE: true

jobs:
  release-prod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Tag
        uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: '(?<package>.*)_(?<version>.*)'

      - name: Get Package Info
        uses: olegtarasov/get-tag@v2.1
        id: packageInfo
        with:
          tagRegex: '(?<package>[a-z\-]+)\_v(?<version>[0-9\.]+)'

      - name: Set Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Set Version
        run: |
          echo "RELEASE_VERSION=${{ steps.tagName.outputs.package }}_${{ steps.tagName.outputs.version }}" >> $GITHUB_ENV

      - name: Install
        run: yarn

      - name: Fetch config
        run: |
          yarn workspace ${{ steps.tagName.outputs.package }} run conf --name production

      - name: Lint
        run: |
          yarn workspace ${{ steps.tagName.outputs.package }} run lint

      - name: Test
        run: |
          yarn workspace ${{ steps.tagName.outputs.package }} run test --watch=false --coverage --ci --silent --forceExit --detectOpenHandles --runInBand

      - name: Build
        run: |
          yarn workspace ${{ steps.tagName.outputs.package }} run build

      - name: Release
        run: |
          yarn workspace ${{ steps.tagName.outputs.package }} run release --stage prod
      
      - name: Package Version Change
        run: |
          test -f packages/${{ steps.packageInfo.outputs.package }}/package.json
          test "${{ steps.packageInfo.outputs.version }}" != $(yarn json -f packages/${{ steps.packageInfo.outputs.package }}/package.json version)
          yarn json -I -f packages/${{ steps.packageInfo.outputs.package }}/package.json -e "this.version='${{ steps.packageInfo.outputs.version }}'"

      - name: Publish
        run: |
          yarn workspace ${{ steps.tagName.outputs.package }} run publish --tag latest
