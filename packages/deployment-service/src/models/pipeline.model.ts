import { table, autoGeneratedHashKey, attribute, hashKey } from '@aws/dynamodb-data-mapper-annotations'
import { embed } from '@aws/dynamodb-data-mapper'
import { DeploymentModelInterface, DeploymentStatus, PipelineModelInterface } from '@reapit/foundations-ts-definitions'
import { TABLE_NAMES } from './../constants'
import { TaskModel } from './task.model'
import { DeploymentModel } from './deployment.model'

@table(TABLE_NAMES.PIPELINE)
export class PipelineModel implements PipelineModelInterface {
  @autoGeneratedHashKey()
  id?: string

  @hashKey()
  deploymentId?: string

  @attribute({ defaultProvider: () => Date() })
  created?: string

  @attribute({ defaultProvider: () => Date() })
  modified?: string

  @attribute({ defaultProvider: () => DeploymentStatus.PENDING })
  buildStatus?: DeploymentStatus

  @attribute()
  S3Location?: string

  @attribute({ memberType: embed(TaskModel) })
  tasks?: TaskModel[] = []

  @attribute({ memberType: embed(DeploymentModel) })
  deployment?: DeploymentModelInterface
}
